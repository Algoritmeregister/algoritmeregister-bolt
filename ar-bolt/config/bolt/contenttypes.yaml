# This file defines the content types on the website. See the documentation for
# details: https://docs.bolt.cm/contenttypes/intro

# The Homepage content type is a singleton: There can be only one record of this
# content type.

homepage:
    name: Homepage
    singular_name: Homepage
    fields:
        title:
            type: text
            class: large
            group: content
            localize: true
            label: Title
            postfix: |
                The 'Homepage' can contain basic information about the website. This title will be
                shown on the homepage of the website, as the name implies. To change the
                <em><strong>name</strong></em> of the site, as is shown in the header, and the tab
                in the webbrowser, edit <code>sitename:</code> in the configuration file.
        image:
            type: image
        introduction:
            type: redactor
            localize: true
        content:
            type: redactor
            localize: true
        contentlink:
            type: text
            label: Link
            placeholder: 'contentType/slug or https://example.org/'
            postfix: "Use this to add a link for this Homepage. This could either be an 'internal' link like <tt>page//about</tt>, if you use a contentType/slug combination. Otherwise use a proper URL, like `https://example.org`."
            fixture_format: '{url}'
        slug:
            type: slug
            uses: title
            group: Meta
    viewless: false
    taxonomy: [ categories, tags, foobars ]
    locales: ['en', 'nl', 'pt_BR', 'es']
    singleton: true
    icon_many: "fa:home"
    icon_one: "fa:home"


# Pages can be used for the more 'static' pages on your site. This content-type
# has a 'templateselect' field, which allows you to override the record_template
# setting for an individual page.
# The taxonomy for this ContentType is defined as 'groups', which is a so-called
# "grouping taxonomy". This way you can easily group sets of pages that logically
# belong together. If your site has a 'services' section, in which you'd like to
# list the different types of services a company provides, you can group these
# together.

pages:
    name: Pages
    singular_name: Page
    fields:
        title:
            type: text
            class: large
            group: content
        teaser:
            type: textarea
            postfix: |
                A text-only version of the content, that can be used to "tease"
                the content when it's used in listing pages or search results.
        image:
            type: image
            label: Highlighted image
        body:
            type: redactor
            height: 300px
        slug:
            type: slug
            uses: title
            group: Meta
        template:
            type: templateselect
            filter: '/^[^_].*\.twig$/'
    taxonomy: [ groups ]
    records_per_page: 5
    order: id

registrations:
    name: Registraties
    singular_name: Registratie
    fields: 
        name:
            type: text
            label: "Naam"
            group: "ALGEMENE INFORMATIE"
            info: "Wat de naam die gebruikt wordt om dit algoritme aan te duiden? Voorbeeld: 'WMO voorspelling Rotterdam' of 'Crowd-monitoring Enschede'."
            required: true
        organization:
            type: text
            label: "Organisatie"
            group: "ALGEMENE INFORMATIE"
            info: "Wat is de volledige naam van de organisatie verantwoordelijk voor de inzet van het model, algoritme of AI? Voorbeeld: 'Gemeente Amsterdam' of 'Waterschap Limburg'."
            required: true
        department:
            type: text
            label: "Afdeling"
            group: "ALGEMENE INFORMATIE"
            info: "Wat is de volledige naam van de afdeling of divisie verantwoordelijk voor de inzet van het model, algoritme of AI? Voorbeeld: 'Stadsdeel Segbroek' of 'Verkeer en Transport'."
            required: true
        description_short:
            type: textarea
            label: "Korte omschrijving"
            group: "ALGEMENE INFORMATIE"
            info: "Geef een korte omschrijving van maximaal 150 karakters waarin hoog over omschreven wordt wat het doel is van het model, algoritme of AI. Voorbeeld: 'Algoritme dat bij stoplichten voorrang van verkeersmodaliteiten berekent op basis van wetgeving en lokale voorschriften."
            required: true
        type:
            type: text
            label: "Type algoritme"
            group: "ALGEMENE INFORMATIE"
            info: "Geef aan of het model, algoritme of AI descriptief, diagnostisch, voorspellend of prescriptief is. Deze information kan gebruikt worden als risico-indicator."
            required: false
        category:
            type: text
            label: "Categorie"
            group: "ALGEMENE INFORMATIE"
            info: "Geef zoekwoorden om zoeken te ondersteunen. Voorbeelden: 'verkeer', 'transport', 'sociale zekerheid', 'drukte-monitoring', 'gezichtsherkenning', 'camera-toezicht'."
            required: false
        website:
            type: text
            label: "URL van de website"
            group: "ALGEMENE INFORMATIE"
            info: "Wat is de URL van de pagina waarom meer informatie te vinden is over het model, algoritme of AI en de inzet daarvan? Dit is interessant voor gebruikers die meer willen weten over de praktische inzet en technische details."
            required: false
        status:
            type: text
            label: "Status"
            group: "ALGEMENE INFORMATIE"
            info: "Geef aan of het model, algoritme of AI in ontwikkeling is, in gebruik, of buiten gebruik."
            required: false
        goal:
            type: text
            label: "Doel"
            group: "INZET"
            info: "Omschrijf de doelen waarvoor het model, algoritme of AI ontwikkeld is en hoe de inzet ervan bijdraagt aan het behalen van die doelen. Hieruit moet duidelijk blijken hoe en waarom deze specifieke technologie daar aan bijdraagt."
            required: false
        impact:
            type: text
            label: "Impact"
            group: "INZET"
            info: "Omschrijf hoe burgers te maken krijgen met de effecten van het model, algoritme of AI. Onder welke omstandigheden gebeurt dit en wat zijn de verwachte consequenties daarvan voor het individu en/of de samenleving?"
            required: false
        proportionality:
            type: text
            label: "Proportionaliteit"
            group: "INZET"
            info: "Omschrijf waarom de inzet van het model, algoritme of AI redelijk gerechtvaardigd is. Hieruit moet blijken waarom de verwachte baten groter zijn dan de negatieve effecten en risico's."
            required: false
        decision_making_process:
            type: text
            label: "Besluitvormingsproces"
            group: "INZET"
            info: "Binnen welk proces in de organisatie wordt het model, algoritme of AI ingezet? Dit moet linken aan concrete wetgeving, voorschriften of beleid zoals vastgelegd in publiek beschikbare bronnen."
            required: false
        documentation:
            type: text
            label: "Documentatie"
            group: "INZET"
            info: "Wat is de URL naar aanvullende documentatie over dit specifieke gebruik van het model, algoritme of AI?"
            required: false
        description:
            type: text
            label: "Lange omschrijving"
            group: "TOEPASSING"
            info: "Geef een uitgebreide uitleg tussen de 500 en 10000 karakters lang van de manier van werken van het model, algoritme of AI. Dit moet alle relevante aspecten bevatten om te kunnen snappen hoe het model, algoritme of AI data verwerkt en een beslissing maakt of beinvloed."
            required: false
        application_url:
            type: text
            label: "URL van de applicatie"
            group: "TOEPASSING"
            info: "Wat is de URL van de algoritmische applicatie of broncode. Voorbeelden zijn links naar Github, de Common Ground componentencatalogus, of de webpagina van de aanbieder?"
            required: false
        publiccode:
            type: text
            label: "URL van publiccode.yml"
            group: "TOEPASSING"
            info: "Wat is, indien beschikbaar, de URL van het publiccode.yml bestand?"
            required: false
        MPRD:
            type: boolean
            label: "Koppelingen met basisregistraties"
            group: "TOEPASSING"
            info: "Geef aan of er gebruik wordt gemaakt van koppeling met de BRP."
            required: false
        source_data:
            type: text
            label: "Brondata"
            group: "TOEPASSING"
            info: "Geen een overzicht van de databronnen die gebruikt worden door of bij het maken of trainen van het model, algoritme of AI. Dit moet inzicht geven in met welk doel welke data is toegevoegd en mogelijke afhankelijkheden die daaruit voortvloeien."
            required: false
        methods_and_models:
            type: text
            label: "Methoden en modellen"
            group: "TOEPASSING"
            info: "Geef aan welke standaard methoden of modellen het algoritme gebruikt. Voorbeelden: ROC-curve, confusion matrix."
            required: false
        monitoring:
            type: text
            label: "Monitoring"
            group: "TOEZICHT"
            info: "Geef een overzicht van hoe de organisatie de inzet van het model, algoritme of AI monitort."
            required: false
        human_intervention:
            type: text
            label: "Menselijke tussenkomst"
            group: "TOEZICHT"
            info: "Geef aan hoe de uitkomsten van het model, algoritme of AI door een mens gecontroleerd en bijgesteld worden. Dit moet inzicht geven in hoe menselijke interventie is verzekerd om misstanden te voorkomen."
            required: false
        risks:
            type: text
            label: "Risico's"
            group: "TOEZICHT"
            info: "Geef een overzicht van de voorziene risico's. Dit mag ook verwijzen naar online documentatie. Aanbevelingen assesment instrumenten: ..."
            required: false
        performance_standard:
            type: text
            label: "Prestatienormen"
            group: "TOEZICHT"
            info: "Geef aan wat de verwachte prestaties van het model, algoritme of AI zijn en hoe die worden gemeten. Dit moet beschrijven welke criteria gebruikt worden en met welke regelmaat deze worden beoordeeld."
            required: false
        competent_authority:
            type: text
            label: "Bevoegde autoriteit"
            group: "JURIDISCH"
            info: "Welke bevoegde autoriteit is verantwoordelijk voor de inzet van het model, algoritme of AI?"
            required: false
        lawful_basis:
            type: text
            label: "Wettelijke grondslag"
            group: "JURIDISCH"
            info: "Geef een verwijzing naar het formele besluit waarin de inzet van het model, algoritme of AI is goedgekeurd."
            required: false
        DPIA:
            type: boolean
            label: "Data protection impact assessment"
            group: "JURIDISCH"
            info: "Is er een data protection impact assessment (DPIA) uitgevoerd?"
            required: false
        DPIA_description:
            type: text
            label: "Omschrijving van de DPIA"
            group: "JURIDISCH"
            info: "Geef een overzicht van de belangrijkste zaken die uit de data protection impact assessment (DPIA) naar voren kwamen. Dit moet beschrijven hoe discriminatie wordt tegengegaan bij gebruik van (proxies van) etniciteit, sexe, of postcode. Indien beschikbaar kan dit verwijzen naar de URL van de volledige DPIA documentatie."
            required: false
        objection_procedure:
            type: text
            label: "Bezwaarprocedure"
            group: "JURIDISCH"
            info: "Omschrijf op welke manier burgers bezwaar kunnen maken tegen de uitkomsten van het model, algoritme of AI."
            required: false
        schema:
            type: text
            label: "Schema"
            group: "METADATA"
            info: "Dit is het schema gebruikt voor deze registratie."
            required: true
        id:
            type: text
            label: "ID"
            group: "METADATA"
            info: "Dit is de unieke identificatie (uuid) voor deze registratie."
            required: true
        url:
            type: text
            label: "URL"
            group: "METADATA"
            info: "Dit is de URL voor deze registratie."
            required: true
        contact_email:
            type: text
            label: "E-mailadres van de contactpersoon"
            group: "METADATA"
            info: "Dit is het e-mailadres van de organisatie of het contactpersoon voor deze registratie."
            required: true
        area:
            type: text
            label: "Geografisch gebied"
            group: "METADATA"
            info: "Dit is het geografische gebied waarop deze registratie betrekking heeft."
            required: false
        lang:
            type: text
            label: "Taal"
            group: "METADATA"
            info: "Dit is de taal waarin deze registratie is ingevoerd."
            required: false
        revision_date:
            type: text
            label: "Herzieningsdatum"
            group: "METADATA"
            info: "Dit is de datum waarvoor deze registratie moet worden herzien."
            required: true
        slug:
            type: slug
            uses: name
            group: Meta
    record_template: entry.twig
    listing_template: listing.twig
    listing_records: 10
    default_status: published
    order: -publishedAt
    records_per_page: 10
    icon_many: "fa:file-alt"
    icon_one: "fa:file-alt"
    
# Entries can be used for things like 'news' or 'blogpostings'. They have a
# 'teaser', which can be used for a short blurb on listing-pages, allowing
# visitors to click-through to the rest of the entry. It also has fields for an
# image and an optional video embed.
# A relation is defined to the pages ContentType. This way you can refer to a
# page from your news-item.
# This ContentType defines 'categories' and 'tags' as taxonomies, allowing the
# editor to use both to categorize a specific entry.
# The 'order' is set to '-datepublish', which means that newer entries will be
# shown above older entries.

entries:
    name: Entries
    singular_name: Entry
    fields:
        title:
            type: text
            class: large
            group: Entry
        teaser:
            type: textarea
            postfix: |
                A text-only version of the content, that can be used to "tease"
                the content when it's used in listing pages or search results.
        image:
            type: image
            upload: entries
        body:
            type: article
        video:
            type: embed
        slug:
            type: slug
            uses: title
            group: Meta
    relations:
        pages:
            multiple: false
            order: title
            label: Select a page
        people:
            multiple: false
            label: Author of this Entry
            required: false
    taxonomy: [ categories, tags, groups ]
    record_template: entry.twig
    listing_template: listing.twig
    listing_records: 10
    default_status: published
    order: -publishedAt
    records_per_page: 10
    icon_many: "fa:file-alt"
    icon_one: "fa:file-alt"


# The 'People' ContentType can be used to build pages about the people in your
# company, organisation or any other kind of team.

people:
    name: People
    singular_name: Person
    title_format: "{name} ({description})"
    fields:
        name:
            type: text
            class: large
            variant: inline
            fixture_format: '{name}'
        description:
            type: text
            variant: inline
            postfix: This person's job description, title or somesuch
            fixture_format: '{jobTitle}'
        email:
            type: text
            variant: inline
            fixture_format: '{safeEmail}'
        image:
            type: image
        content:
            type: redactor
        contentlink:
            type: text
            label: Link
            placeholder: 'contentType/slug or https://example.org/'
            postfix: "Use this to add a link for this Person. This could either be an 'internal' link like <tt>page//about</tt>, if you use a contentType/slug combination. Otherwise use a proper URL, like `https://example.org`. If left blank, it'll default to the internal link to this Record's detail page."
            fixture_format: '{url}'
        slug:
            type: slug
            uses: [ name ]
    icon_one: fa:user
    icon_many: fa:users


# The 'Blocks' ContentType is a so-called 'resource ContentType'. This means
# that it can be used to manage smaller pieces of content, like the 'about us'
# text, an 'our address' in the footer, or similar short blurbs of text.
# For more info, see: https://docs.bolt.cm/howto/resource-contenttype

blocks:
    name: Blocks
    singular_name: Block
    excerpt_format: '{teaser}'
    fields:
        title:
            type: text
            class: large
            label: Title of this Block
            group: Block
        image:
            type: image
        teaser:
            type: redactor
            fixture_format: '{paragraph}'
        content:
            type: redactor
        contentlink:
            type: text
            label: Link
            placeholder: 'contentType/slug or https://example.org/'
            postfix: "Use this to add a link for this Homepage. This could either be an 'internal' link like <tt>page//about</tt>, if you use a contentType/slug combination. Otherwise use a proper URL, like `https://example.org`."
            fixture_format: '{url}'
        slug:
            type: slug
            uses: [ title ]
            group: Meta
    show_on_dashboard: true
    viewless: true
    default_status: published
    searchable: false
    order: title
    icon_many: "fa:cubes"
    icon_one: "fa:cube"


# The 'Products' ContentType can be used to manage information about the
# products or services you (or your company, organisation) provide.

products:
    name: Products
    singular_name: Product
    fields:
        title:
            type: text
            class: large
            variant: inline
            label: Name of this product
            group: Block
            fixture_format: '{catchPhrase}'
        feature_1:
            type: text
            variant: inline
            fixture_format: '{bs}'
            label: "Key feature 1"
        feature_2:
            type: text
            variant: inline
            fixture_format: '{bs}'
            label: "Key feature 2"
        feature_3:
            type: text
            variant: inline
            fixture_format: '{bs}'
            label: "Key feature 3"
        price:
            type: text
            fixture_format: "€ {randomDigitNotNull}0,-"
        image:
            type: image
        teaser:
            type: redactor
            fixture_format: '{paragraph}'
        content:
            type: redactor
        slug:
            type: slug
            uses: [ title ]
            group: Meta
    show_on_dashboard: true
    viewless: false
    default_status: published
    searchable: false
    order: title
    icon_many: "fa:gifts"
    icon_one: "fa:gift"

# Possible field types:
#
# text - varchar(256) - input type text.
# number - double - Input field for numbers, with `mode: integer` or `mode: float`
# imagelist - text (65kb) - Input type for imagelists. Add multiple images. Useful for image sliders, galleries, etcetera.
# image - varchar(256) - image select/upload widget, stored as filename.
# file - varchar(256) - file select/upload widget, stored as filename.
# filelist - text (65kb) - Input type for a list of files. Including a description.
# embed - text (65kb) - embed widget for video and audio. Stored as JSON.
# html - text (65kb) - wysiwyg element.
# textarea - varchar(32768) - Simple, plain < textarea > field.
# markdown - varchar(32768) - wysiwyg element, which is parsed as Markdown text.
# date - datetime - date selector widget, with `mode: date` or `mode: datetime`
# email - text(65kb) - Input type for email.
# select - varchar(256) - select with predefined values
# templateselect - varchar(256) - select with template filenames
# checkbox - integer - checkbox-field which is 1 (checked) or 0 (unchecked)
# set - text (65kb) - Input type for sests. Group fields semantically into a combined set field.
# collection - text (65kb) - Input type for collections. Add multiple fields of different types. Useful for lists.
# data - text (65kb) - Read-only field, useful for storing (raw) data provided by an external source.
# hidden - text (65kb) - Regular text field, except it is hidden from the content editor.
# slug - text(65kb) - The slug for the record. Use with option `uses: [ title ]` to generate based on a title field.

# Using YAML repeated nodes
#
# YAML allows the defining of "repeated nodes". These allow you to define a 'node'
# with a 'key: &name' and referenced later with '<<: *name'
#
# Bolt allows you to define this with the special entry of '__nodes:' that itself
# won't create a ContentType, but will allow you to use it in actual ContentTypes
# to prevent repeating yourself.
#
# To achieve this, first create a key '__nodes:' and place it before your other contenttypes:
#__nodes:
#    field_defaults: &field_defaults
#        title:
#            type: text
#            class: large
#            group: main
#        slug:
#            type: slug
#            uses: title
#    template_defaults: &template_defaults
#        template:
#            type: templateselect
#            filter: '*.twig'
#            group: meta
#
# Then, as an example, you could create a ContentType with default fields, with
# an additional 'image' field.
#
#contenttypeabc:
#    name: ContentType Abc
#    slug: contenttypeabc
#    fields:
#        <<: *field_defaults
#        image:
#            type: image
#            attrib: title
#            extensions: [ gif, jpg, png ]
#        <<: *template_defaults
#    taxonomy: [ chapters ]
#    records_per_page: 10
#
# Alternatively, or additionally, you then can then create a ContentType with
# default fields, and a 'select' field, and a different 'templateselect' option.
#
#contenttypexyz:
#    name: ContentType Xyz
#    slug: contenttypexyz
#    fields:
#        <<: *field_defaults
#        selectfield:
#            type: select
#            values: [ none, foo, bar ]
#        template:
#            type: templateselect
#            filter: '*_xyz.twig'
#    taxonomy: [ tags ]
#    records_per_page: 20
